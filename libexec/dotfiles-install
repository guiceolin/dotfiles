containsElement () {
  local e
  for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
  return 1
}



usage(){
  echo "Dotfiles module installation"
  echo ""
  echo "Usage: dotfiles install -l|--list"
  echo "       dotfiles install module"
}

installed_modules () {
  shopt -s nullglob
  for path in "${DOTFILES_ROOT_PATH}/modules_enabled/"*; do
    if [ -h "$path" ]; then
      echo "${path##*/}"
    fi
  done
}

uninstalled_modules () {
  shopt -s nullglob
  for path in "${DOTFILES_ROOT_PATH}/modules_available/"*; do
    if ! containsElement "${path##*/}" $(installed_modules); then
      echo "${path##*/}"
    fi
  done
}

install_module() {
  if containsElement "$1" $(uninstalled_modules); then
    echo Installing $1..
    pushd $DOTFILES_ROOT_PATH/modules_available/$1 > /dev/null
    ln -s $(pwd) $DOTFILES_ROOT_PATH/modules_enabled/$1
    shopt -s nullglob
    for f in "$DOTFILES_ROOT_PATH/modules_available/$1/home/"*;
    do
      ln -s $f ~/${f##*/}
    done
    popd > /dev/null
    echo Done!
    exit 1
  fi
  echo Already Installed: $1
  exit 0
}

if [ "$#" -eq 0 ]
then   # Script needs at least one command-line argument.
  usage $@
  exit 1
fi


case "$1" in
  -h)
    usage
    ;;
  -l|--list)
    printf "\nAvailable\n"
    uninstalled_modules
    printf "\nInstalled\n"
    installed_modules
    ;;
  *)
    install_module $1
    ;;
esac

